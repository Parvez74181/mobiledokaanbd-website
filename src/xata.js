// Generated by Xata Codegen 0.27.0. Please do not edit.
import { buildClient } from "@xata.io/client";
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
  {
    name: "Types",
    columns: [{ name: "type", type: "string" }],
    revLinks: [{ column: "types", table: "Posts" }],
  },
  {
    name: "Brands",
    columns: [{ name: "brand", type: "string" }],
    revLinks: [{ column: "brands", table: "Posts" }],
  },
  {
    name: "Posts",
    columns: [
      { name: "title", type: "string" },
      { name: "released", type: "string" },
      { name: "os", type: "string" },
      { name: "display", type: "string" },
      { name: "camera", type: "string" },
      { name: "processor", type: "string" },
      { name: "battery", type: "string" },
      { name: "announced", type: "string" },
      { name: "status", type: "string" },
      { name: "technology", type: "string" },
      { name: "bands_2g", type: "string" },
      { name: "bands_3g", type: "string" },
      { name: "bands_4g", type: "string" },
      { name: "bands_5g", type: "string" },
      { name: "speed", type: "string" },
      { name: "gprs", type: "string" },
      { name: "edge", type: "string" },
      { name: "dimensions", type: "string" },
      { name: "weight", type: "string" },
      { name: "build", type: "string" },
      { name: "sim", type: "string" },
      { name: "type", type: "string" },
      { name: "size", type: "string" },
      { name: "resolution", type: "string" },
      { name: "multitouch", type: "string" },
      { name: "protection", type: "string" },
      { name: "display_features", type: "string" },
      { name: "chipset", type: "string" },
      { name: "cpu", type: "string" },
      { name: "gpu", type: "string" },
      { name: "card_slot", type: "string" },
      { name: "internal", type: "string" },
      { name: "ram", type: "string" },
      { name: "front_camera", type: "string" },
      { name: "back_camera", type: "string" },
      { name: "camera_features", type: "string" },
      { name: "video", type: "string" },
      { name: "alert_types", type: "string" },
      { name: "loudspeaker", type: "string" },
      { name: "headphone_jack", type: "string" },
      { name: "wlan", type: "string" },
      { name: "bluetooth", type: "string" },
      { name: "gps", type: "string" },
      { name: "nfc", type: "string" },
      { name: "fm_radio", type: "string" },
      { name: "usb", type: "string" },
      { name: "infrared_port", type: "string" },
      { name: "sensors", type: "string" },
      { name: "messaging", type: "string" },
      { name: "browser", type: "string", defaultValue: "HTML5" },
      { name: "java", type: "string", defaultValue: "No" },
      { name: "battery_types", type: "string" },
      { name: "battery_capacity", type: "string" },
      { name: "charging", type: "string" },
      { name: "made_by", type: "string" },
      { name: "color", type: "string" },
      { name: "highlights", type: "text" },
      { name: "types", type: "link", link: { table: "Types" } },
      { name: "brands", type: "link", link: { table: "Brands" } },
      { name: "meta_description", type: "text" },
      { name: "meta_tags", type: "text" },
      { name: "visitors", type: "int" },
      { name: "pros", type: "text" },
      { name: "cons", type: "text" },
      { name: "ratings", type: "string" },
      { name: "body_others", type: "string" },
      { name: "images", type: "string" },
      { name: "official_price", type: "string" },
      { name: "unofficial_price", type: "string" },
      { name: "price_range", type: "string" },
      { name: "international_price", type: "string" },
      { name: "slug", type: "string" },
    ],
  },
  { name: "AdminTokens", columns: [{ name: "token", type: "text" }] },
  { name: "TotalVisitors", columns: [{ name: "visitor", type: "int" }] },
  { name: "DailyVisitors", columns: [{ name: "visitor", type: "int" }] },
];
/** @type { import('@xata.io/client').ClientConstructor<{}> } */
const DatabaseClient = buildClient();
const defaultOptions = {
  databaseURL:
    "https://Md-Parvez-s-workspace-m2fcko.eu-west-1.xata.sh/db/Mobile-info",
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
export class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
let instance = undefined;
/** @type { () => XataClient } */
export const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient();
  return instance;
};
