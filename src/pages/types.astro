---
export const prerender = false;
import Layout from "../layouts/Layout.astro";
import { Image } from "astro:assets";
import infoIcon from "../../public/info-icon.svg";
import Button from "../components/Button.astro";
import notFound from "../../public/404-svg.svg";
import { XataClient } from "../xata";

const xata = new XataClient({
  apiKey: import.meta.env.XATA_API_KEY,
  branch: import.meta.env.XATA_BRANCH,
});
let records: any;
let totalRecords: any;

const page = Number(Astro.url.searchParams.get("page")) || 1;
const pageSize = 20;

let typeString = Astro.url.searchParams.get("type");
let type = typeString
  .split("-")
  .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
  .join(" ");

try {
  const dataPromise = xata.db.Posts.filter({
    "types.type": { $iContains: type },
  })
    .sort("xata.updatedAt", "desc")
    .select([
      "id",
      "title",
      "slug",
      "images",
      "released",
      "os",
      "display",
      "camera",
      "ram",
      "battery",
      "official_price",
      "unofficial_price",
      "international_price",
    ])
    .getPaginated({
      pagination: {
        size: pageSize,
        offset: ((page || 1) - 1) * pageSize,
      },
    });

  const countPromise = xata.db.Posts.summarize({
    summaries: {
      total: { count: "*" },
    },
    filter: {
      "types.type": { $iContains: type },
    },
  });

  const [countData, recordData] = await Promise.all([
    countPromise,
    dataPromise,
  ]);
  totalRecords = countData.summaries[0].total;

  records = recordData.records;
} catch (error) {
  console.log(error);
}

const pageCount = Math.ceil(Number(totalRecords) / pageSize);

let paginationItems: String[] = [];

// insert prev icon
paginationItems.push(
  `<li ><a class="cursor-pointer flex justify-center items-center w-9 h-9 ${
    page <= 1 && "opacity-50 cursor-default select-none"
  }" id='pagination-item' ${
    page > 1 && `href=?type=${typeString}&page=${page - 1}`
  }>
    <img  src="/dropdown-icon.svg" title="prev" height={15} width={15} loading='lazy' class="rotate-90" decoding='async' alt="prev button"/></a></li>`
);

for (let i = page - 3; i <= page + 3; i++) {
  // if i is negative number then continue the for loop
  if (i < 1) continue;
  else if (i > pageCount) break; // if i is greater then pageCount then break the for loop

  paginationItems.push(
    ` <li ><a class="cursor-pointer flex justify-center items-center w-9 h-9 rounded-full hover:bg-green-700 hover:text-white hover:shadow-lg ${
      i === page && "bg-green-600 text-white current"
    }" id='pagination-item' href='?type=${typeString}&page=${i}'>${i}</a></li>`
  );
}

// insert next icon
paginationItems.push(
  `<li ><a class="cursor-pointer flex justify-center items-center w-9 h-9  ${
    page >= pageCount && "opacity-50 cursor-default select-none"
  }" id='pagination-item' ${
    page < pageCount && `href=?type=${typeString}&page=${page + 1}`
  }> <img  src="/dropdown-icon.svg" title="prev" height={15} width={15} loading='lazy' class="-rotate-90" decoding='async' alt="prev button"/></a></li>`
);
---

<Layout title={"Search Result: " + type + " | MobileDokaanBD"}>
  <main class="min-h-screen w-full xl:w-[70%] px-5">
    <!-- breadcrumbs -->
    <nav class="flex mb-3" aria-label="Breadcrumb">
      <ol
        class="inline-flex items-center space-x-1 md:space-x-2 rtl:space-x-reverse"
      >
        <li class="inline-flex items-center">
          <a
            href="/"
            class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-green-600"
          >
            <svg
              class="w-3 h-3 me-2.5"
              aria-hidden="true"
              xmlns="http://www.w3.org/2000/svg"
              fill="currentColor"
              viewBox="0 0 20 20"
            >
              <path
                d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z"
              ></path>
            </svg>
             Home
          </a>
        </li>

        <li aria-current="page">
          <a href={`/types?type=${typeString}`} class="flex items-center">
            <svg
              class="rtl:rotate-180 w-3 h-3 text-gray-400 mx-1"
              aria-hidden="true"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 6 10"
            >
              <path
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="m1 9 4-4-4-4"></path>
            </svg>
            <span
              class="ms-1 text-sm font-medium text-gray-500 md:ms-2 dark:text-gray-400"
              >{type}</span
            >
          </a>
        </li>
      </ol>
    </nav>

    <!-- if record found. [i used records[0].record cause this is an array, thats why i'm chacking that if the first data exist or not] -->
    {
      records.length !== 0 && (
        <>
          <h1 class="border-b-2">Showing Search Results for: "{type}"</h1>
          <div class="wrapper my-5 grid grid-cols-2 md:grid-cols-4 gap-5">
            {records?.map((record: any) => {
              return (
                <>
                  <div class="card border flex flex-col justify-between items-center rounded">
                    <a href={`/${record?.slug}`} class="p-1 relative">
                      <Image
                        src={record?.images.split(",")[0]}
                        width={300}
                        height={300}
                        alt={`${record?.title}`}
                        class="card-image"
                      />

                      <Image
                        src={infoIcon}
                        alt="info-icon"
                        class="info-icon absolute opacity-0 top-2 right-2 z-50"
                        height={25}
                        width={25}
                      />

                      <div class="hover-details absolute flex flex-col select-none  pointer-events-none text-xs gap-[5px] px-2 justify-center top-0 left-0 w-full opacity-0  z-40 backdrop-blur-3xl bg-transparent">
                        <span>
                          <strong> Released:</strong> {record?.released}
                        </span>
                        <span>
                          <strong> Display:</strong> {record?.display}
                        </span>
                        <span>
                          <strong> Camera: </strong>
                          {record?.camera}
                        </span>
                        <span>
                          <strong> Battery: </strong>
                          {record?.battery}
                        </span>
                        <span>
                          <strong> OS: </strong>
                          {record?.os}
                        </span>
                        <span>
                          <strong> Ram:</strong> {record?.ram}
                        </span>
                      </div>

                      <h2 class="title text-center hover:underline">
                        {record?.title}
                      </h2>
                      {record?.official_price ? (
                        <h3 class="price text-center  text-green-600">
                          ৳ {record?.official_price.split("<br>")[0]}
                        </h3>
                      ) : record?.unofficial_price ? (
                        <h3 class="price text-center  text-green-600">
                          ৳ {record?.unofficial_price.split("<br>")[0]}
                        </h3>
                      ) : (
                        <h3 class="price text-center  text-green-600">
                          ৳ {record?.international_price.split("<br>")[0]}
                        </h3>
                      )}
                    </a>
                  </div>
                </>
              );
            })}
          </div>

          <div
            id="pagination"
            class="pagination w-full flex justify-center items-center px-20 my-10"
          >
            <ul
              class="flex gap-1 items-center pagination-ul"
              data-pagecount={pageCount}
              set:html={paginationItems}
            />
          </div>
        </>
      )
    }

    <!-- if record not found. [i used records[0].record cause this is an array, thats why i'm chacking that if the first data exist or not] -->
    {
      records.length === 0 && (
        <>
          <h1 class="border-b-2">No Results Found for: "{type}"</h1>
          <div class=" w-full flex justify-center flex-col items-center mt-10">
            <Image
              src={notFound}
              class="rounded-md object-contain"
              width={300}
              height={226}
              alt="404-pagenot-found"
            />
            <p class="text-xl my-5">Oops! No Results Found for: "{type}"</p>
            <a href={"/"} class="mb-10 mt-5">
              <Button text={"Back to Home"} />
            </a>
          </div>
        </>
      )
    }
  </main>
</Layout>

<style lang="scss">
  h1 {
    font-weight: 900;
    position: relative;
    padding-bottom: 10px;
    font-size: 24px;
    color: #5f5f5f;
    &::before {
      content: "";
      position: absolute;
      height: 2px;
      width: 100px;
      bottom: -2px;
      left: 0;
      background: var(--secondary-color);
    }
  }
  .card {
    &:hover {
      .card-image {
        transition: 0.3s;
        scale: 1.02;
        opacity: 0.8;
        & ~ .info-icon {
          opacity: 1;
          &:hover {
            & ~ .hover-details {
              transition: 0.3s;
              height: 75%;
              opacity: 1;
              user-select: auto;
              pointer-events: auto;
            }
          }
        }
      }
    }
    .hover-details {
      transition: 0.3s;
      height: 0;
    }
    h2,
    h3 {
      text-align: center;
    }
  }
</style>
